const tsQ=[
    {   
        id:"gsjsjsks",
        question:"What are the three main 'simple types' in TypeScript?",
        opt:["Object, String, Number",
        "Boolean, Number, String  ",
        "Object, Array, Symbol",
        "Array, Object, Boolean"],
        ans:"opt2", 
    },
    {   
        id:"dkjjssjio",
        question:"You can disable implicit variable type assignment by enabling the compiler option:",
        opt:["autoTypeAssignment = FALSE ",
        "Implicit = FALSE",
        "noImplicitAny",
        "noAutoType"],
        ans:"opt3",
    },
    {  
        id:"skjiewww",
        question:"You can enable 'undefined' and 'null' types to be accounted for by enabling the compiler property:",
        opt:["strictChecksRequired ",
        "noAutoType",
        "noFalseyInits",
        "strictNullChecks"],
        ans:"opt4",
    },
    {  
        id:"skjiewww",
        question:"______ is similar to 'any', but a safer alternative when uncertain about the type.",
        opt:["unknown",
        "never",
        "similar",
        "unsimilar"],
        ans:"opt1",
    },
    {  
        id:"skjiewww",
        question:"What is the inherited type for the variable example in `const example = ['Dylan']`?",
        opt:["string[]",
        "unknown[]",
        "string",
        "any[]"],
        ans:"opt1",
    },
    {  
        id:"skjiewww",
        question:"Which is a successful example of this tuple `[number, string]`?",
        opt:["const ourTuple = [101]",
        "const ourTuple = [101, 'Coding God']",
        "const ourTuple = ['Coding God', 101]",
        "const ourTuple = [101, 101, 'Coding God', 'Coding God']"],
        ans:"opt2",
    },
    {  
        id:"skjiewww",
        question:"Type Aliases are mostly used with ______.",
        opt:["Strings",
        "Numbers",
        "Booleans",
        "Arrays"],
        ans:"opt1",
    },
    {  
        id:"skjiewww",
        question:"________ an interface will have the same properties as that interface.",
        opt:["Duplicating",
        "Extending",
        "Idolizing",
        "Improving"],
        ans:"opt2",
    },
    {  
        id:"skjiewww",
        question:"What are the two types of enums?",
        opt:["String and Boolean",
        "String and Number",
        "Number and Number Array",
        "Number and Boolean"],
        ans:"opt2",
    },
    {  
        id:"skjiewww",
        question:"Numeric enums first value is defaulted to what?",
        opt:["1",
        "10",
        "0",
        "5"],
        ans:"opt3",
    },
    {  
        id:"skjiewww",
        question:"What is the type of the parameter: `function ex(param1?: string){}`?",
        opt:["string",
        "string | null",
        "string | undefined",
        "unknown"],
        ans:"opt3",
    },
    {  
        id:"skjiewww",
        question:"_____ is a return type for when nothing is returned.",
        opt:["any[]",
        "any",
        "unknown",
        "void"],
        ans:"opt4",
    },
    {  
        id:"skjiewww",
        question:"Access modifiers control the ______ of properties and methods",
        opt:["mocking",
        "inheritance",
        "type",
        "visibility"],
        ans:"opt4",
    },
    {  
        id:"skjiewww",
        question:"When a class extends another class and replaces the members of its parent it is called what?",
        opt:["extending",
        "override",
        "overload",
        "inheriting"],
        ans:"opt2",
    },
    {  
        id:"skjiewww",
        question:"What are the two types of enums?",
        opt:["String and Boolean",
        "String and Number",
        "Number and Number Array",
        "Number and Boolean"],
        ans:"opt2",
    }
];